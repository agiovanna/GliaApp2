{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react-native-web/dist/index\";\nimport { Screen, Container, Content, SubTitle, Title } from \"./style\";\nimport { Button } from \"../../../../components/Button\";\nimport { Header } from \"../../../../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUpClient3(_ref) {\n  var route = _ref.route;\n  function Verification() {\n    return _Verification.apply(this, arguments);\n  }\n  function _Verification() {\n    _Verification = _asyncToGenerator(function* () {\n      var _route$params = route.params,\n        name = _route$params.name,\n        birthDate = _route$params.birthDate,\n        telephone = _route$params.telephone,\n        email = _route$params.email,\n        password = _route$params.password,\n        passwordConf = _route$params.passwordConf;\n      console.log('Nome: ' + name, 'Data de nascimento: ' + birthDate, 'Contato: ' + telephone, 'E-mail: ' + email, 'Senha: ' + password, 'Confirmação de senha: ' + passwordConf);\n    });\n    return _Verification.apply(this, arguments);\n  }\n  return _jsx(Screen, {\n    children: _jsxs(Content, {\n      children: [_jsx(Header, {\n        title: \"Senha\"\n      }), _jsxs(Container, {\n        children: [_jsx(Title, {\n          children: \" VERIFIQUE SEU EMAIL!\"\n        }), _jsx(SubTitle, {\n          children: \" Para continuar, verifique o link de verifica\\xE7\\xE3o enviado para seu email. Aperte o bot\\xE3o \\\"Verificar\\\" ap\\xF3s isso.  \"\n        }), _jsx(Button, {\n          type: \"terciary\",\n          title: \"Verificar\",\n          onPress: Verification\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Screen","Container","Content","SubTitle","Title","Button","Header","jsx","_jsx","jsxs","_jsxs","SignUpClient3","_ref","route","Verification","_Verification","apply","arguments","_asyncToGenerator","_route$params","params","name","birthDate","telephone","email","password","passwordConf","console","log","children","title","type","onPress"],"sources":["C:/desenvolvimento TCC/GLIAAPP/app-glia/src/screens/Client/SignUp/SignUpThirdStep/index.tsx"],"sourcesContent":["import React from \"react-native\";\r\nimport { Screen, Container, Content, SubTitle, Title } from './style';\r\n//import { createUserClient } from \"src/api/createUser/createClient\";\r\n//import verificationEmail from \"src/utils/emailValidation/verifyValidation\";\r\n\r\n\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { Header } from \"../../../../components/Header\";\r\n\r\nexport function SignUpClient3({ route }: { route: any }) {\r\n    async function Verification() {\r\n\r\n        //verificationEmail;\r\n\r\n        const {\r\n            name,\r\n            birthDate,\r\n            telephone,\r\n            email,\r\n            password,\r\n            passwordConf\r\n        } = route.params;\r\n\r\n        console.log(\r\n            'Nome: ' + name,\r\n            'Data de nascimento: ' + birthDate,\r\n            'Contato: ' + telephone,\r\n            'E-mail: ' + email,\r\n            'Senha: ' + password,\r\n            'Confirmação de senha: ' + passwordConf);\r\n\r\n        /*createUserClient(\r\n            name,\r\n            birthDate,\r\n            telephone,\r\n            email,\r\n            password\r\n        );*/\r\n\r\n    }\r\n\r\n    return (\r\n        <Screen>\r\n            <Content>\r\n                <Header title=\"Senha\" />\r\n\r\n                <Container>\r\n                    <Title> VERIFIQUE SEU EMAIL!</ Title>\r\n                    <SubTitle> Para continuar, verifique o link de verificação enviado para seu email. Aperte o botão \"Verificar\" após isso.  </SubTitle>\r\n\r\n                    <Button type=\"terciary\" title=\"Verificar\" onPress={Verification} />\r\n                </Container>\r\n            </Content>\r\n        </Screen>\r\n    );\r\n}"],"mappings":";OAAOA,KAAK;AACZ,SAASC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,KAAK;AAKpD,SAASC,MAAM;AACf,SAASC,MAAM;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvD,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAAA,SAClBC,YAAYA,CAAA;IAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,cAAA;IAAAA,aAAA,GAAAG,iBAAA,CAA3B,aAA8B;MAI1B,IAAAC,aAAA,GAOIN,KAAK,CAACO,MAAM;QANZC,IAAI,GAAAF,aAAA,CAAJE,IAAI;QACJC,SAAS,GAAAH,aAAA,CAATG,SAAS;QACTC,SAAS,GAAAJ,aAAA,CAATI,SAAS;QACTC,KAAK,GAAAL,aAAA,CAALK,KAAK;QACLC,QAAQ,GAAAN,aAAA,CAARM,QAAQ;QACRC,YAAY,GAAAP,aAAA,CAAZO,YAAY;MAGhBC,OAAO,CAACC,GAAG,CACP,QAAQ,GAAGP,IAAI,EACf,sBAAsB,GAAGC,SAAS,EAClC,WAAW,GAAGC,SAAS,EACvB,UAAU,GAAGC,KAAK,EAClB,SAAS,GAAGC,QAAQ,EACpB,wBAAwB,GAAGC,YAAY,CAAC;IAUhD,CAAC;IAAA,OAAAX,aAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OACIT,IAAA,CAACR,MAAM;IAAA6B,QAAA,EACHnB,KAAA,CAACR,OAAO;MAAA2B,QAAA,GACJrB,IAAA,CAACF,MAAM;QAACwB,KAAK,EAAC;MAAO,CAAE,CAAC,EAExBpB,KAAA,CAACT,SAAS;QAAA4B,QAAA,GACNrB,IAAA,CAACJ,KAAK;UAAAyB,QAAA,EAAC;QAAqB,CAAQ,CAAC,EACrCrB,IAAA,CAACL,QAAQ;UAAA0B,QAAA,EAAC;QAAgH,CAAU,CAAC,EAErIrB,IAAA,CAACH,MAAM;UAAC0B,IAAI,EAAC,UAAU;UAACD,KAAK,EAAC,WAAW;UAACE,OAAO,EAAElB;QAAa,CAAE,CAAC;MAAA,CAC5D,CAAC;IAAA,CACP;EAAC,CACN,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}