{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react-native-web/dist/index\";\nimport { Screen, Container, Content, SubTitle, Title } from \"./style\";\nimport { useState } from \"react\";\nimport { Button } from \"../../../../components/Button\";\nimport { Input } from \"../../../../components/Input\";\nimport { Header } from \"../../../../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUpClient2(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordConf = _useState6[0],\n    setPasswordConf = _useState6[1];\n  var _route$params = route.params,\n    name = _route$params.name,\n    birthDate = _route$params.birthDate,\n    telephone = _route$params.telephone,\n    cpf = _route$params.cpf;\n  function RegisterandSendEmail() {\n    return _RegisterandSendEmail.apply(this, arguments);\n  }\n  function _RegisterandSendEmail() {\n    _RegisterandSendEmail = _asyncToGenerator(function* () {\n      try {\n        navigation.navigate('SignUpClient2', {\n          name: name,\n          birthDate: birthDate,\n          telephone: telephone,\n          cpf: cpf,\n          email: email,\n          password: password,\n          passwordConf: passwordConf\n        });\n      } catch (erro) {\n        console.log('erro: ' + erro);\n      }\n    });\n    return _RegisterandSendEmail.apply(this, arguments);\n  }\n  return _jsx(Screen, {\n    children: _jsxs(Content, {\n      children: [_jsx(Header, {\n        title: \"Senha\"\n      }), _jsxs(Container, {\n        children: [_jsx(Title, {\n          children: \" Por favor, digite um email v\\xE1lido e crie uma senha forte:\"\n        }), _jsx(SubTitle, {\n          children: \" A senha deve conter pelo menos 8 d\\xEDgitos, um n\\xFAmero e letra  \"\n        }), _jsx(Input, {\n          placeholder: \"Digite seu email\",\n          type: \"primary\",\n          onChangeText: setEmail,\n          value: email\n        }), _jsx(Input, {\n          placeholder: \"Digite a senha\",\n          type: \"primary\",\n          onChangeText: setPassword,\n          value: password\n        }), _jsx(Input, {\n          placeholder: \"Confirme a senha\",\n          type: \"primary\",\n          onChangeText: setPasswordConf,\n          value: passwordConf\n        }), _jsx(Button, {\n          type: \"terciary\",\n          title: \"Finalizar\",\n          onPress: RegisterandSendEmail\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Screen","Container","Content","SubTitle","Title","useState","Button","Input","Header","jsx","_jsx","jsxs","_jsxs","SignUpClient2","_ref","navigation","route","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","passwordConf","setPasswordConf","_route$params","params","name","birthDate","telephone","cpf","RegisterandSendEmail","_RegisterandSendEmail","apply","arguments","_asyncToGenerator","navigate","erro","console","log","children","title","placeholder","type","onChangeText","value","onPress"],"sources":["C:/desenvolvimento TCC/GLIAAPP/app-glia/src/screens/Client/SignUp/SignUpSecondStep/index.tsx"],"sourcesContent":["import React from \"react-native\";\r\nimport { Screen, Container, Content, SubTitle, Title } from './style';\r\n//import { RegisterFirebaseandSendEmail } from \"src/utils/emailValidation/sendValidation\";\r\nimport { useState } from \"react\";\r\n//import firebaseAuth from \"src/api/firebase/firebaseConfig\";\r\n\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { Input } from \"../../../../components/Input\";\r\nimport { Header } from \"../../../../components/Header\";\r\n\r\nexport function SignUpClient2({ navigation, route }: { navigation: any, route: any }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConf, setPasswordConf] = useState('');\r\n\r\n    const {\r\n        name,\r\n        birthDate,\r\n        telephone,\r\n        cpf\r\n    } = route.params;\r\n\r\n    async function RegisterandSendEmail() {\r\n        try {\r\n            //RegisterFirebaseandSendEmail(email, password);\r\n\r\n            navigation.navigate('SignUpClient2', {\r\n                name,\r\n                birthDate,\r\n                telephone,\r\n                cpf,\r\n                email,\r\n                password,\r\n                passwordConf,\r\n                //firebaseAuth\r\n            });\r\n        }\r\n        catch (erro) {\r\n            console.log('erro: ' + erro)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Screen>\r\n            <Content>\r\n                <Header title=\"Senha\" />\r\n\r\n                <Container>\r\n                    <Title> Por favor, digite um email válido e crie uma senha forte:</ Title>\r\n                    <SubTitle> A senha deve conter pelo menos 8 dígitos, um número e letra  </SubTitle>\r\n\r\n                    <Input placeholder=\"Digite seu email\" type=\"primary\" onChangeText={setEmail} value={email} />\r\n                    <Input placeholder=\"Digite a senha\" type=\"primary\" onChangeText={setPassword} value={password} />\r\n\r\n                    <Input placeholder=\"Confirme a senha\" type=\"primary\" onChangeText={setPasswordConf} value={passwordConf} />\r\n\r\n                    <Button type=\"terciary\" title=\"Finalizar\" onPress={RegisterandSendEmail} />\r\n                </Container>\r\n            </Content>\r\n        </Screen>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}